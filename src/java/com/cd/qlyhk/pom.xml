<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--所有的springboot工程都必须继承spring-boot-starter-parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.cd</groupId>
	<artifactId>qlyhk</artifactId>
	<packaging>jar</packaging>
	<name>qlyhk</name>
	<version>1.0.1</version>
	<description>千里眼获客帮手</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		<cdlib.version>2.0.1.RELEASE</cdlib.version>
		<app.version>1.0.1</app.version>
		<build.plugins.version>3.1.0</build.plugins.version>

		<spring.version>5.1.8.RELEASE</spring.version>
		<fastjson.version>1.2.57</fastjson.version>
		<xstream.version>1.4.10</xstream.version>
		<comm-fildupload.version>1.3.3</comm-fildupload.version>
		<commonsPool.version>1.6</commonsPool.version>
		<pagehelper.version>5.1.1</pagehelper.version>
		<ehcache.version>2.10.3</ehcache.version>
		<commons-collections.version>3.2.2</commons-collections.version>
		<aspectj.version>1.7.4</aspectj.version>
		<druid.version>1.0.26</druid.version>
		<commons-lang3.version>3.5</commons-lang3.version>
		<javax.el-api.version>3.0.0</javax.el-api.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<commons-codec.version>1.10</commons-codec.version>
		<poi.version>3.17</poi.version>
		<itextpdf.version>5.5.11</itextpdf.version>
		<itext-asian.version>5.2.0</itext-asian.version>
		<jpinyin.version>1.1.8</jpinyin.version>

		<jxl.version>2.6.6</jxl.version>
		<ximpleware.vtd-xml.version>2.11</ximpleware.vtd-xml.version>
		<jackson-mapper.version>1.9.13</jackson-mapper.version>
	</properties>


	<dependencies>
		<!--web功能的起步依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- 移除嵌入式tomcat插件 -->
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-starter-tomcat</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>

		<!--内置tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.apache.tomcat</groupId> -->
		<!-- <artifactId>tomcat-servlet-api</artifactId> -->
		<!-- <version>8.5.39</version> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!--热部署配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<!--@ConfiguaritionProperties的执行器的配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!--mybatis起步依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency><!-- 用于桥接commons-logging 到 slf4j -->
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- shiro dependency -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<scope>provided</scope>
			<version>${javax.el-api.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- spring test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${comm-fildupload.version}</version>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<!-- <version>${spring.version}</version> -->
		</dependency>

		<!-- VTD-XML是一种无提取的XML解析方法，它较好的解决了DOM占用内存过大的缺点，并且还提供了快速的解析与遍历、对XPath的支持和增量更新等特性 -->
		<dependency>
			<groupId>com.ximpleware</groupId>
			<artifactId>vtd-xml</artifactId>
			<version>${ximpleware.vtd-xml.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-mapper.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- jxl -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<scope>system</scope>
			<version>${jxl.version}</version>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/jxl.jar
			</systemPath>
		</dependency>

		<!-- jconsole -->
		<dependency>
			<groupId>jconsole</groupId>
			<artifactId>jconsole</artifactId>
			<scope>system</scope>
			<version>unknown</version>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/jconsole.jar
			</systemPath>
		</dependency>
		<!-- pinyin4j -->
		<dependency>
			<groupId>net.sourceforge</groupId>
			<artifactId>pinyin4j</artifactId>
			<scope>system</scope>
			<version>2.5.0</version>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/pinyin4j-2.5.0.jar
			</systemPath>
		</dependency>
		
		<!-- commons-cli -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-cli</artifactId>
			<scope>system</scope>
			<version>1.2.1</version>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/commons-cli-1.2.1.jar
			</systemPath>
		</dependency>

		<!-- begin 子系统内部工程包引用 -->
		<dependency>
			<groupId>com.cd</groupId>
			<artifactId>com.cd.rdf</artifactId>
			<version>${cdlib.version}</version>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- end 子系统内部工程包引用 -->

		<!-- wx -->
		<dependency>
			<groupId>com.github.wxpay</groupId>
			<artifactId>wxpay-sdk</artifactId>
			<version>0.0.3</version>
		</dependency>

		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>weixin-java-mp</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>weixin-java-cp</artifactId>
			<version>3.4.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- end wx工程包引用 -->

		<dependency>
			<groupId>us.codecraft</groupId>
			<artifactId>webmagic-core</artifactId>
			<version>0.7.3</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>us.codecraft</groupId>
			<artifactId>webmagic-extension</artifactId>
			<version>0.7.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.qcloud/qcloud-image-sdk <dependency> 
			<groupId>com.qcloud</groupId> <artifactId>qcloud-image-sdk</artifactId> <version>2.0.1</version> 
			</dependency> -->

		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>2.8.3</version>
		</dependency>
		
		<dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.0</version>
        </dependency>

	</dependencies>

	<build>
		<!-- 打包出来的工程名称为项目名称,不包含版本号 -->
		<finalName>${project.name}</finalName>
		<!-- 
		<resources>
			<resource>
				<directory>src/main/java/META-INF</directory>
				<targetPath>META-INF/</targetPath>
			</resource>
		</resources>
		 -->
		<plugins>

			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-compiler-plugin</artifactId> -->
			<!-- <version>3.1</version> -->
			<!-- </plugin> -->
			
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-maven-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- 指定该Main Class为全局的唯一入口 -->
			<!-- <mainClass>com.cd.qlyhk.QlyhkApplication</mainClass> -->
			<!-- </configuration> -->
			<!-- </plugin> -->

			<!-- <plugin> -->
			<!-- <artifactId>maven-war-plugin</artifactId> -->
			<!-- <version>${build.plugins.version}</version> -->
			<!-- <configuration> -->
			<!-- 如果想在没有web.xml文件的情况下构建WAR，请设置为false。 -->
			<!-- <failOnMissingWebXml>false</failOnMissingWebXml> -->
			<!-- </configuration> -->
			<!-- </plugin> -->

		</plugins>
	</build>

</project>
